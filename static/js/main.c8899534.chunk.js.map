{"version":3,"sources":["actions/logActions.js","actions/types.js","components/layout/SearchBar.js","components/logs/LogItem.js","components/layout/PreLoader.js","components/logs/Logs.js","components/layout/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["setLoading","type","SearchBar","_ref","searchLogs","text","useRef","react_default","a","createElement","style","marginBottom","className","id","required","placeholder","ref","onChange","e","current","value","htmlFor","prototypes","PropTypes","func","isRequired","connect","_ref5","Object","asyncToGenerator","regenerator_default","mark","_callee5","dispatch","res","data","wrap","_context5","prev","next","fetch","concat","sent","json","payload","t0","response","statusText","stop","_x5","apply","this","arguments","deleteLog","_ref3","_callee3","_context3","method","_x3","setCurrent","log","href","attention","onClick","message","tech","dist_default","format","date","M","toast","html","PreLoader","state","getLogs","_callee","_context","_x","_ref$log","logs","loading","useEffect","layout_PreLoader","length","map","logs_LogItem","key","AddBtn","getTechs","_ref$tech","techs","t","firstName","lastName","modalStyle","width","height","addLog","_ref2","_callee2","_context2","body","JSON","stringify","headers","Content-Type","_x2","_useState","useState","_useState2","slicedToArray","setMessage","_useState3","_useState4","setAttention","_useState5","_useState6","setTech","name","target","disabled","techs_TechSelectOptions","checked","newLog","Date","EditLogModal","updateLog","updLog","prototype","object","_ref4","_callee4","_context4","_x4","addTech","setFirstName","setLastName","deleteTech","techs_TechItem","initialState","error","combineReducers","undefined","action","objectSpread","toConsumableArray","filter","console","laoding","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","es","react","layout_SearchBar","layout_AddBtn","logs_AddLogModal","logs_EditLogModal","techs_AddTechModal","techs_TechListModal","logs_Logs","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c8899534.chunk.js","sourcesContent":["import {\r\n    GET_LOGS,\r\n    SET_LOADING,\r\n    LOGS_ERROR,\r\n    ADD_LOG,\r\n    DELETE_LOG,\r\n    UPDATE_LOG,\r\n    SEARCH_LOGS,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n} from './types';\r\n\r\n// export const getLogs = () => {\r\n//  return async (dispatch) => {\r\n//   setLoading();\r\n\r\n//   const res = await fetch('/logs');\r\n//   const data = await res.json()\r\n\r\n//   dispatch({\r\n//     type: GET_LOGS,\r\n//     payload: data\r\n//   })\r\n//  }\r\n// }\r\n\r\n// use try catch instead\r\n// Get Logs from Server\r\nexport const getLogs = () => async (dispatch) => {\r\n    try {\r\n        // activate the loader to display if needed\r\n        setLoading();\r\n\r\n        const res = await fetch('/logs');\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: GET_LOGS,\r\n            payload: data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText,\r\n        });\r\n    }\r\n};\r\n\r\n// add new log\r\nexport const addLog = (log) => async (dispatch) => {\r\n    try {\r\n        setLoading();\r\n        //using fetch to post instead of axios\r\n        const res = await fetch('/logs', {\r\n            method: 'POST',\r\n            body: JSON.stringify(log),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: ADD_LOG,\r\n            payload: data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText,\r\n        });\r\n    }\r\n};\r\n\r\n// delete log from server\r\nexport const deleteLog = (id) => async (dispatch) => {\r\n    try {\r\n        setLoading();\r\n\r\n        await fetch(`/logs/${id}`, {\r\n            method: 'DELETE',\r\n        });\r\n\r\n        dispatch({\r\n            type: DELETE_LOG,\r\n            payload: id,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText,\r\n        });\r\n    }\r\n};\r\n\r\n// Update log on server\r\nexport const updateLog = (log) => async (dispatch) => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch(`/logs/${log.id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(log),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: UPDATE_LOG,\r\n            payload: data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText,\r\n        });\r\n    }\r\n};\r\n\r\n// search logs\r\nexport const searchLogs = (text) => async (dispatch) => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch(`/logs?q=${text}`);\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: SEARCH_LOGS,\r\n            payload: data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText,\r\n        });\r\n    }\r\n};\r\n\r\n// set current log\r\nexport const setCurrent = (log) => {\r\n    return {\r\n        type: SET_CURRENT,\r\n        payload: log,\r\n    };\r\n};\r\n\r\n// clear current log\r\nexport const clearCurrent = () => {\r\n    return {\r\n        type: CLEAR_CURRENT,\r\n    };\r\n};\r\n\r\n// set loading to true\r\nexport const setLoading = () => {\r\n    return {\r\n        type: SET_LOADING,\r\n    };\r\n};\r\n","export const GET_LOGS = 'GET_LOGS';\r\nexport const ADD_LOG = 'ADD_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const LOGS_ERROR = 'LOGS_ERROR';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\nexport const GET_TECHS = 'GET_TECHS';\r\nexport const ADD_TECH = 'ADD_TECH';\r\nexport const DELETE_TECH = 'DELETE_TECH';\r\nexport const TECHS_ERROR = 'TECHS_ERROR';\r\n","import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { searchLogs } from '../../actions/logActions';\r\n\r\nconst SearchBar = ({ searchLogs }) => {\r\n\t//when importing from materialize you will have to adjust certain things\r\n\t//2. added forward slash '/' on the input... check errors in console.log and it will show you the needed changes. In this case we change 'class' to 'className' and 'for' to 'htmlFor'\r\n\r\n\tconst onChange = e => {\r\n\t\tsearchLogs(text.current.value);\r\n\t};\r\n\r\n\tconst text = useRef('');\r\n\r\n\treturn (\r\n\t\t<nav style={{ marginBottom: '30px' }} className='blue'>\r\n\t\t\t<div className='nav-wrapper'>\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<div className='input-field'>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid='search'\r\n\t\t\t\t\t\t\ttype='search'\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tplaceholder='Search Logs..'\r\n\t\t\t\t\t\t\tref={text}\r\n\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label className='label-icon' htmlFor='search'>\r\n\t\t\t\t\t\t\t<i className='material-icons'>search</i>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<i className='material-icons'>close</i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nSearchBar.prototypes = {\r\n\tsearchLogs: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n\tnull,\r\n\t{ searchLogs }\r\n)(SearchBar);\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteLog, setCurrent } from '../../actions/logActions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\r\n\tconst onDelete = () => {\r\n\t\tdeleteLog(log.id);\r\n\t\tM.toast({ html: 'Log Deleted' });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<li className='collection-item'>\r\n\t\t\t<div>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref='#edit-log-modal'\r\n\t\t\t\t\tclassName={`modal-trigger ${\r\n\t\t\t\t\t\tlog.attention ? 'red-text' : 'blue-text'\r\n\t\t\t\t\t}`}\r\n\t\t\t\t\tonClick={() => setCurrent(log)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{log.message}\r\n\t\t\t\t</a>\r\n\t\t\t\t<br />\r\n\t\t\t\t<span className='grey-text'>\r\n\t\t\t\t\t<span className='black-text'>ID #{log.id}</span> last updated by{' '}\r\n\t\t\t\t\t<span className='black-text'>{log.tech}</span> on{' '}\r\n\t\t\t\t\t<Moment format='MMM Do YYY, h: mm: ss a'>{log.date}</Moment>\r\n\t\t\t\t</span>\r\n\t\t\t\t<a href='#!' onClick={onDelete} className='secondary-content'>\r\n\t\t\t\t\t<i className='material-icons grey-text'>delete</i>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nLogItem.propTypes = {\r\n\tlog: PropTypes.object.isRequired,\r\n\tdeleteLog: PropTypes.func.isRequired,\r\n\tsetCurrent: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n\tnull,\r\n\t{ deleteLog, setCurrent }\r\n)(LogItem);\r\n","import React from 'react';\r\n\r\nconst PreLoader = () => {\r\n\treturn (\r\n\t\t<div className='progress blue lighten-4'>\r\n\t\t\t<div className='indeterminate blue' />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PreLoader;\r\n","import React, { useEffect } from 'react';\r\n// we start with state in the component until we move it to redux store. so we use the {useState, useEffect} for now\r\nimport { connect } from 'react-redux'; // must export as HOC ()()\r\nimport LogItem from './LogItem';\r\nimport PreLoader from '../layout/PreLoader';\r\nimport PropTypes from 'prop-types';\r\nimport { getLogs } from '../../actions/logActions'; // add to mapStateToProps\r\n\r\n// this destructed prop pulls from the whole state.\r\n//logs and loading are props off log and getLogs is props off logActions all need to be destructed for access\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n\tuseEffect(() => {\r\n\t\tgetLogs();\r\n\t\t// get rid of the unwanted warnings with the next line\r\n\t\t// eslint-disable-next-line\r\n\t}, []);\r\n\r\n\tif (loading || logs === null) {\r\n\t\treturn <PreLoader />;\r\n\t}\r\n\r\n\t// use a collection which is like a list group from bootstrap but is a materialze feature\r\n\treturn (\r\n\t\t<ul className='collection with-header'>\r\n\t\t\t<li className='collection-header'>\r\n\t\t\t\t<h4 className='center'>System Logs</h4>\r\n\t\t\t</li>\r\n\t\t\t{!loading && logs.length === 0 ? (\r\n\t\t\t\t<p className='center'>No logs to show...</p>\r\n\t\t\t) : (\r\n\t\t\t\tlogs.map(log => <LogItem log={log} key={log.id} />)\r\n\t\t\t)}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nLogs.propTypes = {\r\n\tlog: PropTypes.object.isRequired,\r\n\tgetLogs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tlog: state.log // state.log connects to the root reducer that exports all reducers and 'log:' is the prop key that holds that state... then we destructure up top. Or we could just do\r\n\t//logs: state.log.logs,\r\n\t//loading: state.log.loading\r\n});\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ getLogs } // must add the action to props after importing\r\n)(Logs);\r\n//exporting highlevel method that takes in the component\r\n// this allows us to use mapStateToProps so we can bring in app level state as props\r\n","import React from 'react';\r\n\r\nconst AddBtn = () => {\r\n\treturn (\r\n\t\t<div className='fixed-action-btn'>\r\n\t\t\t<a\r\n\t\t\t\thref='#add-log-modal'\r\n\t\t\t\tclassName='btn-floating btn-large blue darken-2 modal-trigger'\r\n\t\t\t>\r\n\t\t\t\t<i className='large material-icons'>add</i>\r\n\t\t\t</a>\r\n\r\n\t\t\t<ul>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref='#tech-list-modal'\r\n\t\t\t\t\t\tclassName='btn-floating green modal-trigger'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className='material-icons'>person</i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href='#add-tech-modal' className='btn-floating red modal-trigger'>\r\n\t\t\t\t\t\t<i className='material-icons'>person_add</i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AddBtn;\r\n","import {\r\n\tGET_TECHS,\r\n\tADD_TECH,\r\n\tDELETE_TECH,\r\n\tSET_LOADING,\r\n\tTECHS_ERROR\r\n} from './types';\r\n\r\n// Get Techs from server\r\nexport const getTechs = () => async dispatch => {\r\n\ttry {\r\n\t\tsetLoading();\r\n\r\n\t\tconst res = await fetch('/techs');\r\n\t\tconst data = await res.json();\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: GET_TECHS,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: TECHS_ERROR,\r\n\t\t\tpayload: err.response.statusText\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// add tech to server\r\nexport const addTech = tech => async dispatch => {\r\n\ttry {\r\n\t\tsetLoading();\r\n\r\n\t\tconst res = await fetch('/techs', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: JSON.stringify(tech),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst data = await res.json();\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_TECH,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: TECHS_ERROR,\r\n\t\t\tpayload: err.response.statusText\r\n\t\t});\r\n\t}\r\n};\r\n\r\n//Delete Tech from server\r\nexport const deleteTech = id => async dispatch => {\r\n\ttry {\r\n\t\tsetLoading();\r\n\r\n\t\tawait fetch(`/techs/${id}`, {\r\n\t\t\tmethod: 'DELETE'\r\n\t\t});\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_TECH,\r\n\t\t\tpayload: id\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n\t\t\ttype: TECHS_ERROR,\r\n\t\t\tpayload: err.response.statusText\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n\treturn {\r\n\t\ttype: SET_LOADING\r\n\t};\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getTechs } from '../../actions/techActions';\r\n\r\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\r\n\tuseEffect(() => {\r\n\t\tgetTechs();\r\n\t\t// eslint-disable-next-line\r\n\t}, []);\r\n\treturn (\r\n\t\t!loading &&\r\n\t\ttechs !== null &&\r\n\t\ttechs.map(t => (\r\n\t\t\t<option key={t.id} value={`${t.firstName} ${t.lastName}`}>\r\n\t\t\t\t{t.firstName} {t.lastName}\r\n\t\t\t</option>\r\n\t\t))\r\n\t);\r\n};\r\n\r\nTechSelectOptions.propTypes = {\r\n\ttech: PropTypes.object.isRequired,\r\n\tgetTechs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\ttech: state.tech\r\n});\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ getTechs }\r\n)(TechSelectOptions);\r\n","import React, { useState } from 'react';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addLog } from '../../actions/logActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddLogModal = ({ addLog }) => {\r\n\tconst [message, setMessage] = useState('');\r\n\tconst [attention, setAttention] = useState(false);\r\n\tconst [tech, setTech] = useState('');\r\n\r\n\tconst onSubmit = () => {\r\n\t\tif (message === '' || tech === '') {\r\n\t\t\tM.toast({ html: 'Please enter a message and tech' });\r\n\t\t} else {\r\n\t\t\tconst newLog = {\r\n\t\t\t\tmessage,\r\n\t\t\t\tattention,\r\n\t\t\t\ttech,\r\n\t\t\t\tdate: new Date()\r\n\t\t\t};\r\n\r\n\t\t\taddLog(newLog);\r\n\r\n\t\t\tM.toast({ html: `Log added by ${tech}` });\r\n\t\t\t// Clear Fields\r\n\t\t\tsetMessage('');\r\n\t\t\tsetTech('');\r\n\t\t\tsetAttention(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id='add-log-modal' className='modal' style={modalStyle}>\r\n\t\t\t<div className='modal-content'>\r\n\t\t\t\t<h4>Enter System Log</h4>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='input-field'>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='message'\r\n\t\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\t\tonChange={e => setMessage(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label htmlFor='message' className='active'>\r\n\t\t\t\t\t\t\tLog Message\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='input-field'>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tname='tech'\r\n\t\t\t\t\t\t\tvalue={tech}\r\n\t\t\t\t\t\t\tclassName='browser-default'\r\n\t\t\t\t\t\t\tonChange={e => setTech(e.target.value)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value='' disabled>\r\n\t\t\t\t\t\t\t\tSelect Technician\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t<TechSelectOptions />\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='input-field'>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\tclassName='filled-in'\r\n\t\t\t\t\t\t\t\t\tchecked={attention}\r\n\t\t\t\t\t\t\t\t\tvalue={attention}\r\n\t\t\t\t\t\t\t\t\tonChange={e => setAttention(!attention)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<span>Needs Attention</span>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='modal-footer'>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref='#!'\r\n\t\t\t\t\tonClick={onSubmit}\r\n\t\t\t\t\tclassName='modal-close waves-effect blue waves-light btn'\r\n\t\t\t\t>\r\n\t\t\t\t\tEnter\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nAddLogModal.propTypes = {\r\n\taddLog: PropTypes.func.isRequired\r\n};\r\n\r\nconst modalStyle = {\r\n\twidth: '75%',\r\n\theight: '75%'\r\n};\r\n\r\nexport default connect(\r\n\tnull,\r\n\t{ addLog }\r\n)(AddLogModal);\r\n","import React, { useState, useEffect } from 'react';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { updateLog } from '../../actions/logActions';\r\n\r\nconst EditLogModal = ({ current, updateLog }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [attention, setAttention] = useState(false);\r\n    const [tech, setTech] = useState('');\r\n    // use effect\r\n    useEffect(() => {\r\n        if (current) {\r\n            setMessage(current.message);\r\n            setAttention(current.attention);\r\n            setTech(current.tech);\r\n        }\r\n    }, [current]);\r\n\r\n    const onSubmit = () => {\r\n        if (message === '' || tech === '') {\r\n            M.toast({ html: 'Please enter a message and tech' });\r\n        } else {\r\n            const updLog = {\r\n                id: current.id,\r\n                message,\r\n                attention,\r\n                tech,\r\n                date: new Date(),\r\n            };\r\n\r\n            updateLog(updLog);\r\n            M.toast({ html: `Log updated by ${tech}` });\r\n            // Clear Fields\r\n            setMessage('');\r\n            setTech('');\r\n            setAttention(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div id='edit-log-modal' className='modal' style={modalStyle}>\r\n            <div className='modal-content'>\r\n                <h4>Enter System Log</h4>\r\n                <div className='row'>\r\n                    <div className='input-field'>\r\n                        <input\r\n                            type='text'\r\n                            name='message'\r\n                            value={message}\r\n                            onChange={(e) => setMessage(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='input-field'>\r\n                        <select\r\n                            name='tech'\r\n                            value={tech}\r\n                            className='browser-default'\r\n                            onChange={(e) => setTech(e.target.value)}\r\n                        >\r\n                            <option value='' disabled>\r\n                                Select Technician\r\n                            </option>\r\n                            <TechSelectOptions />\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='input-field'>\r\n                        <p>\r\n                            <label>\r\n                                <input\r\n                                    type='checkbox'\r\n                                    className='filled-in'\r\n                                    checked={attention}\r\n                                    value={attention}\r\n                                    onChange={(e) => setAttention(!attention)}\r\n                                />\r\n                                <span>Needs Attention</span>\r\n                            </label>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='modal-footer'>\r\n                <a\r\n                    href='#!'\r\n                    onClick={onSubmit}\r\n                    className='modal-close waves-effect blue waves-light btn'\r\n                >\r\n                    Enter\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst modalStyle = {\r\n    width: '75%',\r\n    height: '75%',\r\n};\r\n\r\nEditLogModal.prototype = {\r\n    current: PropTypes.object,\r\n    updateLog: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    current: state.log.current,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateLog })(EditLogModal);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addTech } from '../../actions/techActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n\tconst [firstName, setFirstName] = useState('');\r\n\tconst [lastName, setLastName] = useState('');\r\n\r\n\tconst onSubmit = () => {\r\n\t\tif (firstName === '' || lastName === '') {\r\n\t\t\tM.toast({ html: 'Please enter the first and last name' });\r\n\t\t} else {\r\n\t\t\taddTech({\r\n\t\t\t\tfirstName,\r\n\t\t\t\tlastName\r\n\t\t\t});\r\n\r\n\t\t\tM.toast({ html: `${firstName} ${lastName} was added as a tech` });\r\n\t\t\t// Clear Fields\r\n\t\t\tsetFirstName('');\r\n\t\t\tsetLastName('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id='add-tech-modal' className='modal'>\r\n\t\t\t<div className='modal-content'>\r\n\t\t\t\t<h4>New Technician</h4>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='input-field'>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\tvalue={firstName}\r\n\t\t\t\t\t\t\tonChange={e => setFirstName(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label htmlFor='firstName' className='active'>\r\n\t\t\t\t\t\t\tFirst Name\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='input-field'>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\tvalue={lastName}\r\n\t\t\t\t\t\t\tonChange={e => setLastName(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label htmlFor='lastName' className='active'>\r\n\t\t\t\t\t\t\tLast Name\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='modal-footer'>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref='#!'\r\n\t\t\t\t\tonClick={onSubmit}\r\n\t\t\t\t\tclassName='modal-close waves-effect blue waves-light btn'\r\n\t\t\t\t>\r\n\t\t\t\t\tEnter\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nAddTechModal.propTypes = {\r\n\taddTech: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n\tnull,\r\n\t{ addTech }\r\n)(AddTechModal);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteTech } from '../../actions/techActions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst TechItem = ({ tech: { id, firstName, lastName }, deleteTech }) => {\r\n\tconst onDelete = () => {\r\n\t\tdeleteTech(id);\r\n\t\tM.toast({ html: 'Technician deleted' });\r\n\t};\r\n\treturn (\r\n\t\t<li className='collection-item'>\r\n\t\t\t<div>\r\n\t\t\t\t{firstName} {lastName}\r\n\t\t\t\t<a href='#!' className='secondary-content' onClick={onDelete}>\r\n\t\t\t\t\t<i className='material-icons grey-text'>delete</i>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nTechItem.propTypes = {\r\n\ttech: PropTypes.object.isRequired,\r\n\tdeleteTech: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n\tnull,\r\n\t{ deleteTech }\r\n)(TechItem);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport TechItem from './TechItem';\r\nimport { getTechs } from '../../actions/techActions';\r\n// we start with state in the component until we move it to redux store. so we use the {useState, useEffect} for now\r\n\r\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\r\n\tuseEffect(() => {\r\n\t\tgetTechs();\r\n\t\t// get rid of the unwanted warnings with the next line\r\n\t\t// eslint-disable-next-line\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div id='tech-list-modal' className='modal'>\r\n\t\t\t<div className='modal-content'>\r\n\t\t\t\t<h4>Technician List</h4>\r\n\t\t\t\t<ul className='collection'>\r\n\t\t\t\t\t{!loading &&\r\n\t\t\t\t\t\ttechs !== null &&\r\n\t\t\t\t\t\ttechs.map(tech => <TechItem tech={tech} key={tech.id} />)}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nTechListModal.propTypes = {\r\n\ttech: PropTypes.object.isRequired,\r\n\tgetTechs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\ttech: state.tech\r\n});\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ getTechs }\r\n)(TechListModal);\r\n","import {\r\n\tGET_LOGS,\r\n\tSET_LOADING,\r\n\tLOGS_ERROR,\r\n\tADD_LOG,\r\n\tDELETE_LOG,\r\n\tUPDATE_LOG,\r\n\tSEARCH_LOGS,\r\n\tSET_CURRENT,\r\n\tCLEAR_CURRENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n\tlogs: null,\r\n\tcurrent: null,\r\n\tloading: false,\r\n\terror: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_LOGS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlogs: action.payload,\r\n\t\t\t\tloading: false\r\n\t\t\t};\r\n\t\tcase ADD_LOG:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlogs: [...state.logs, action.payload], // set to array to spread accross the state and add onto the payload which is new log\r\n\t\t\t\tloading: false\r\n\t\t\t};\r\n\t\tcase DELETE_LOG:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlogs: state.logs.filter(log => log.id !== action.payload),\r\n\t\t\t\tloading: false\r\n\t\t\t};\r\n\t\tcase UPDATE_LOG:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlogs: state.logs.map(log =>\r\n\t\t\t\t\tlog.id === action.payload.id ? action.payload : log\r\n\t\t\t\t)\r\n\t\t\t};\r\n\t\tcase SEARCH_LOGS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlogs: action.payload\r\n\t\t\t};\r\n\t\tcase SET_CURRENT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrent: action.payload\r\n\t\t\t};\r\n\t\tcase CLEAR_CURRENT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrent: null\r\n\t\t\t};\r\n\t\tcase SET_LOADING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t};\r\n\t\tcase LOGS_ERROR:\r\n\t\t\tconsole.error(action.payload);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: action.payload\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import {\r\n\tGET_TECHS,\r\n\tADD_TECH,\r\n\tDELETE_TECH,\r\n\tSET_LOADING,\r\n\tTECHS_ERROR\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n\ttechs: null,\r\n\tloading: false,\r\n\terror: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_TECHS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttechs: action.payload,\r\n\t\t\t\tloading: false\r\n\t\t\t};\r\n\t\tcase ADD_TECH:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttechs: [...state.techs, action.payload],\r\n\t\t\t\tlaoding: false\r\n\t\t\t};\r\n\t\tcase DELETE_TECH:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttechs: state.techs.filter(tech => tech.id !== action.payload),\r\n\t\t\t\tloading: false\r\n\t\t\t};\r\n\t\tcase SET_LOADING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t};\r\n\t\tcase TECHS_ERROR:\r\n\t\t\tconsole.error(action.payload);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: action.payload,\r\n\t\t\t\tloading: false\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport logReducer from './logReducer';\r\nimport techReducer from './techReducer';\r\n\r\nexport default combineReducers({\r\n\tlog: logReducer,\r\n\ttech: techReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tinitialState,\r\n\tcomposeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react';\nimport SearchBar from './components/layout/SearchBar';\nimport Logs from './components/logs/Logs';\nimport AddBtn from './components/layout/AddBtn';\nimport AddLogModal from './components/logs/AddLogModal';\nimport EditLogModal from './components/logs/EditLogModal';\nimport AddTechModal from './components/techs/AddTechModal';\nimport TechListModal from './components/techs/TechListModal';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport './App.css';\n\nconst App = () => {\n\tuseEffect(() => {\n\t\t// Init Materialize JS-- this allows us to use materialize in react\n\t\tM.AutoInit();\n\t});\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<Fragment>\n\t\t\t\t<SearchBar />\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<AddBtn />\n\t\t\t\t\t<AddLogModal />\n\t\t\t\t\t<EditLogModal />\n\t\t\t\t\t<AddTechModal />\n\t\t\t\t\t<TechListModal />\n\t\t\t\t\t<Logs />\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t</Provider>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}